# mysql Crud operation commands 

# command to check the version of mysql 

use admin ;
db.system.version.find();


# to see the users details 
 db.system.users.find();



# to check the logs detail 

use local;
switched to db local
> db.startup_log.find();

# command to see collections 

show collections 


# to see all the DB's 

show dbs

# to see currently connected DB 

db

#Create DATABASES -:
Use -: swtiching between DB's / also it create new db if name not exist 
						
#Create COLLECTIONS
db.createCollection("product")
 { "ok" : 1 }
# Since this collection we create under the test DB so now show dbs command will show test DB as well

show collections
product

# Namespace -: always mongo DB refer collection as dbname.collectionName


#command to retrive the Data 
> db.DakshEmployee.find();


# insert collections 

Db.collection_name.insertMany({ })  -:it will insert one records 

Db.collection_name.insertMany([{ },{}])  -:it will insert multiple records 


db.DakshEmployee.insert(
[ {
	"Emp_id": 6,
	"Emp_name": "kiran",
	"Company": "JK mines",
	"phone_no ": 9571561238,
	"email ": "kiran34 @gmail.com ",
	"salary ": 14000
}, 
{
	"Emp_id ": 5,
	"Emp_name": "jai",
	"Company": "jk mines ",
	"phone_no": "n / a ",
	"email": "jai7 @gmail.com ",
	"salary": 700
}
] )



# User defined value of _ID column (could be anything except array)

> db.product.insert({_id:"09ET402013",prod_name:"motorola",price:1500,availability:"coming soon"})
   WriteResult({ "nInserted" : 1 })
{ "_id" : "09ET402013", "prod_name" : "motorola", "price" : 1500, "availability" : "coming soon" }


# Entering dupicate value of _ID will throw duplicate error

> db.product.insert({_id:"09ET402013",prod_name:"nokia",price:1500,availability:"decomm"})
     WriteResult({
        "nInserted" : 0,
        "writeError" : {
                "code" : 11000,
                "errmsg" : "E11000 duplicate key error collection: test.product index: _id_ dup key: { : \"09ET402013\" }"
        }
})

# Inserting with other value 
> db.product.insert({_id:"09ET402014",prod_name:"nokia",price:1500,availability:"decomm"})
WriteResult({ "nInserted" : 1 })


# Issue with array (error for _ID column )

> db.products.insert({product_name:"daksh",price:4000,_id:[12,32]})
WriteResult({
        "nInserted" : 0,
        "writeError" : {
                "code" : 2,
                "errmsg" : "can't use an array for _id"
        }
})



				


